Starting audit...
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\checker\CheckStyleConstants.java:3:1: Utility classes should not have a public or default constructor. [HideUtilityClassConstructor]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Database.java:1:9: Name 'Database' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Database.java:14:21: Variable 'users' must be private and have accessor methods. [VisibilityModifier]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Database.java:15:22: Variable 'movies' must be private and have accessor methods. [VisibilityModifier]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Database.java:16:22: Variable 'moviesUserCanSee' must be private and have accessor methods. [VisibilityModifier]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Database.java:17:22: Variable 'currentMovies' must be private and have accessor methods. [VisibilityModifier]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Database.java:18:10: Variable 'currentPage' must be private and have accessor methods. [VisibilityModifier]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Database.java:19:10: Variable 'currentUser' must be private and have accessor methods. [VisibilityModifier]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Database.java:21:21: Parameter currentPage should be final. [FinalParameters]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Database.java:30:5: Class 'Database' looks like designed for extension (can be subclassed), but the method 'getUsers' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Database' final or making the method 'getUsers' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Database.java:34:5: Class 'Database' looks like designed for extension (can be subclassed), but the method 'setUsers' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Database' final or making the method 'setUsers' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Database.java:34:26: Parameter users should be final. [FinalParameters]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Database.java:38:5: Class 'Database' looks like designed for extension (can be subclassed), but the method 'getMovies' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Database' final or making the method 'getMovies' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Database.java:42:5: Class 'Database' looks like designed for extension (can be subclassed), but the method 'setMovies' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Database' final or making the method 'setMovies' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Database.java:42:27: Parameter movies should be final. [FinalParameters]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Database.java:46:5: Class 'Database' looks like designed for extension (can be subclassed), but the method 'getCurrentPage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Database' final or making the method 'getCurrentPage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Database.java:50:5: Class 'Database' looks like designed for extension (can be subclassed), but the method 'setCurrentPage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Database' final or making the method 'setCurrentPage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Database.java:50:32: Parameter currentPage should be final. [FinalParameters]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Database.java:54:5: Class 'Database' looks like designed for extension (can be subclassed), but the method 'getCurrentUser' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Database' final or making the method 'getCurrentUser' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Database.java:58:5: Class 'Database' looks like designed for extension (can be subclassed), but the method 'setCurrentUser' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Database' final or making the method 'setCurrentUser' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Database.java:58:32: Parameter currentUser should be final. [FinalParameters]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Database.java:63:5: Class 'Database' looks like designed for extension (can be subclassed), but the method 'getCurrentMovies' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Database' final or making the method 'getCurrentMovies' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Database.java:67:5: Class 'Database' looks like designed for extension (can be subclassed), but the method 'setCurrentMovies' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Database' final or making the method 'setCurrentMovies' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Database.java:67:34: Parameter currentMovies should be final. [FinalParameters]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Database.java:71:5: Class 'Database' looks like designed for extension (can be subclassed), but the method 'getMoviesUserCanSee' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Database' final or making the method 'getMoviesUserCanSee' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Database.java:75:5: Class 'Database' looks like designed for extension (can be subclassed), but the method 'setMoviesUserCanSee' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Database' final or making the method 'setMoviesUserCanSee' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Database.java:75:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Database.java:78: Line is longer than 100 characters (found 110). [LineLength]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Database.java:85:5: Class 'Database' looks like designed for extension (can be subclassed), but the method 'getCurrentMoviesToJson' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Database' final or making the method 'getCurrentMoviesToJson' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Database.java:85:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Database.java:86:19: 'movies' hides a field. [HiddenField]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Database.java:94:5: Class 'Database' looks like designed for extension (can be subclassed), but the method 'userLoginOk' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Database' final or making the method 'userLoginOk' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Database.java:94:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Database.java:94:32: Parameter name should be final. [FinalParameters]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Database.java:94:45: Parameter password should be final. [FinalParameters]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Database.java:107:5: Class 'Database' looks like designed for extension (can be subclassed), but the method 'findUser' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Database' final or making the method 'findUser' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Database.java:107:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Database.java:107:26: Parameter name should be final. [FinalParameters]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Database.java:116:5: Class 'Database' looks like designed for extension (can be subclassed), but the method 'logout' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Database' final or making the method 'logout' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Database.java:116:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Database.java:123:5: Class 'Database' looks like designed for extension (can be subclassed), but the method 'addUser' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Database' final or making the method 'addUser' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Database.java:123:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Database.java:123:25: Parameter uc should be final. [FinalParameters]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Pages\ExecuteOnPage.java:1:9: Name 'Database.Pages' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Pages\ExecuteOnPage.java:11:5: Class 'ExecuteOnPage' looks like designed for extension (can be subclassed), but the method 'execute' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ExecuteOnPage' final or making the method 'execute' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Pages\ExecuteOnPage.java:12:25: Parameter page should be final. [FinalParameters]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Pages\ExecuteOnPage.java:12:36: Parameter db should be final. [FinalParameters]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Pages\ExecuteOnPage.java:12:58: Parameter out should be final. [FinalParameters]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Pages\ExecuteOnPage.java:12:77: Parameter action should be final. [FinalParameters]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Pages\ExecuteOnPage.java:16:5: Class 'ExecuteOnPage' looks like designed for extension (can be subclassed), but the method 'execute' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ExecuteOnPage' final or making the method 'execute' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Pages\ExecuteOnPage.java:17:25: Parameter page should be final. [FinalParameters]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Pages\ExecuteOnPage.java:17:42: Parameter db should be final. [FinalParameters]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Pages\ExecuteOnPage.java:17:64: Parameter out should be final. [FinalParameters]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Pages\ExecuteOnPage.java:17:83: Parameter action should be final. [FinalParameters]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Pages\ExecuteOnPage.java:21:5: Class 'ExecuteOnPage' looks like designed for extension (can be subclassed), but the method 'execute' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ExecuteOnPage' final or making the method 'execute' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Pages\ExecuteOnPage.java:22:25: Parameter page should be final. [FinalParameters]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Pages\ExecuteOnPage.java:22:40: Parameter db should be final. [FinalParameters]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Pages\ExecuteOnPage.java:22:62: Parameter out should be final. [FinalParameters]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Pages\ExecuteOnPage.java:22:81: Parameter action should be final. [FinalParameters]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Pages\ExecuteOnPage.java:26:5: Class 'ExecuteOnPage' looks like designed for extension (can be subclassed), but the method 'execute' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ExecuteOnPage' final or making the method 'execute' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Pages\ExecuteOnPage.java:27:25: Parameter page should be final. [FinalParameters]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Pages\ExecuteOnPage.java:27:44: Parameter db should be final. [FinalParameters]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Pages\ExecuteOnPage.java:27:66: Parameter out should be final. [FinalParameters]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Pages\ExecuteOnPage.java:27:85: Parameter action should be final. [FinalParameters]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Pages\ExecuteOnPage.java:45:5: Class 'ExecuteOnPage' looks like designed for extension (can be subclassed), but the method 'execute' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ExecuteOnPage' final or making the method 'execute' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Pages\ExecuteOnPage.java:46:25: Parameter page should be final. [FinalParameters]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Pages\ExecuteOnPage.java:46:41: Parameter db should be final. [FinalParameters]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Pages\ExecuteOnPage.java:46:63: Parameter out should be final. [FinalParameters]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Pages\ExecuteOnPage.java:46:82: Parameter action should be final. [FinalParameters]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Pages\ExecuteOnPage.java:49: Line is longer than 100 characters (found 107). [LineLength]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Pages\ExecuteOnPage.java:64:5: Class 'ExecuteOnPage' looks like designed for extension (can be subclassed), but the method 'execute' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ExecuteOnPage' final or making the method 'execute' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Pages\ExecuteOnPage.java:64:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Pages\ExecuteOnPage.java:64:25: Parameter page should be final. [FinalParameters]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Pages\ExecuteOnPage.java:64:42: Parameter db should be final. [FinalParameters]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Pages\ExecuteOnPage.java:64:64: Parameter out should be final. [FinalParameters]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Pages\ExecuteOnPage.java:64:83: Parameter action should be final. [FinalParameters]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Pages\ExecuteOnPage.java:90: Line is longer than 100 characters (found 138). [LineLength]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Pages\ExecuteOnPage.java:100: Line is longer than 100 characters (found 137). [LineLength]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Pages\ExecuteOnPage.java:113: Line is longer than 100 characters (found 129). [LineLength]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Pages\ExecuteOnPage.java:115: Line is longer than 100 characters (found 129). [LineLength]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Pages\ExecuteOnPage.java:122: Line is longer than 100 characters (found 124). [LineLength]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Pages\ExecuteOnPage.java:125: Line is longer than 100 characters (found 124). [LineLength]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Pages\ExecuteOnPage.java:138: Line is longer than 100 characters (found 104). [LineLength]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Pages\ExecuteOnPage.java:139: Line is longer than 100 characters (found 106). [LineLength]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Pages\HomePage.java:1:9: Name 'Database.Pages' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Pages\HomePage.java:13:5: Class 'HomePage' looks like designed for extension (can be subclassed), but the method 'onPageAction' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'HomePage' final or making the method 'onPageAction' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Pages\HomePage.java:14:30: Parameter action should be final. [FinalParameters]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Pages\HomePage.java:14:51: Parameter db should be final. [FinalParameters]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Pages\HomePage.java:14:64: Parameter out should be final. [FinalParameters]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Pages\HomePage.java:14:76: Parameter currentAction should be final. [FinalParameters]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Pages\HomePage.java:18:5: Class 'HomePage' looks like designed for extension (can be subclassed), but the method 'changePageAction' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'HomePage' final or making the method 'changePageAction' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Pages\HomePage.java:19:34: Parameter action should be final. [FinalParameters]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Pages\HomePage.java:19:49: Parameter db should be final. [FinalParameters]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Pages\HomePage.java:19:62: Parameter out should be final. [FinalParameters]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Pages\HomePage.java:21:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Pages\LoginPage.java:1:9: Name 'Database.Pages' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Pages\LoginPage.java:14:5: Class 'LoginPage' looks like designed for extension (can be subclassed), but the method 'onPageAction' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'LoginPage' final or making the method 'onPageAction' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Pages\LoginPage.java:15:30: Parameter action should be final. [FinalParameters]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Pages\LoginPage.java:15:51: Parameter db should be final. [FinalParameters]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Pages\LoginPage.java:15:64: Parameter out should be final. [FinalParameters]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Pages\LoginPage.java:15:76: Parameter currentAction should be final. [FinalParameters]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Pages\LoginPage.java:16:28: ',' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Pages\LoginPage.java:18:5: Class 'LoginPage' looks like designed for extension (can be subclassed), but the method 'changePageAction' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'LoginPage' final or making the method 'changePageAction' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Pages\LoginPage.java:19:34: Parameter action should be final. [FinalParameters]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Pages\LoginPage.java:19:49: Parameter db should be final. [FinalParameters]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Pages\LoginPage.java:19:62: Parameter out should be final. [FinalParameters]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Pages\LoginPage.java:20:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Pages\MoviesPage.java:1:9: Name 'Database.Pages' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Pages\MoviesPage.java:15:5: Class 'MoviesPage' looks like designed for extension (can be subclassed), but the method 'onPageAction' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MoviesPage' final or making the method 'onPageAction' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Pages\MoviesPage.java:16:30: Parameter action should be final. [FinalParameters]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Pages\MoviesPage.java:16:51: Parameter db should be final. [FinalParameters]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Pages\MoviesPage.java:16:64: Parameter out should be final. [FinalParameters]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Pages\MoviesPage.java:16:76: Parameter currentAction should be final. [FinalParameters]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Pages\MoviesPage.java:20:5: Class 'MoviesPage' looks like designed for extension (can be subclassed), but the method 'changePageAction' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MoviesPage' final or making the method 'changePageAction' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Pages\MoviesPage.java:20:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Pages\MoviesPage.java:20:34: Parameter action should be final. [FinalParameters]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Pages\MoviesPage.java:20:49: Parameter db should be final. [FinalParameters]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Pages\MoviesPage.java:20:62: Parameter out should be final. [FinalParameters]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Pages\MoviesPage.java:21:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Pages\OnPageAction.java:1:9: Name 'Database.Pages' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Pages\OnPageAction.java:8:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Pages\OnPageAction.java:8:5: Redundant 'public' modifier. [RedundantModifier]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Pages\OnPageAction.java:9:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Pages\OnPageAction.java:9:5: Redundant 'public' modifier. [RedundantModifier]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Pages\OnPageAction.java:10:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Pages\OnPageAction.java:10:5: Redundant 'public' modifier. [RedundantModifier]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Pages\OnPageAction.java:11:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Pages\OnPageAction.java:11:5: Redundant 'public' modifier. [RedundantModifier]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Pages\OnPageAction.java:12:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Pages\OnPageAction.java:12:5: Redundant 'public' modifier. [RedundantModifier]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Pages\OnPageAction.java:13:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Pages\OnPageAction.java:13:5: Redundant 'public' modifier. [RedundantModifier]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Pages\Page.java:1:9: Name 'Database.Pages' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Pages\Page.java:8:12: Variable 'name' must be private and have accessor methods. [VisibilityModifier]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Pages\Page.java:11:5: Class 'Page' looks like designed for extension (can be subclassed), but the method 'getName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Page' final or making the method 'getName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Pages\Page.java:15:5: Class 'Page' looks like designed for extension (can be subclassed), but the method 'setName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Page' final or making the method 'setName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Pages\Page.java:15:25: Parameter name should be final. [FinalParameters]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Pages\Page.java:19:5: Class 'Page' looks like designed for extension (can be subclassed), but the method 'onPageAction' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Page' final or making the method 'onPageAction' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Pages\Page.java:19:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Pages\Page.java:19:30: Parameter action should be final. [FinalParameters]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Pages\Page.java:19:51: Parameter db should be final. [FinalParameters]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Pages\Page.java:19:64: Parameter out should be final. [FinalParameters]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Pages\Page.java:19:76: Parameter currentAction should be final. [FinalParameters]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Pages\Page.java:23:5: Class 'Page' looks like designed for extension (can be subclassed), but the method 'changePageAction' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Page' final or making the method 'changePageAction' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Pages\Page.java:23:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Pages\Page.java:23:34: Parameter action should be final. [FinalParameters]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Pages\Page.java:23:49: Parameter db should be final. [FinalParameters]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Pages\Page.java:23:62: Parameter out should be final. [FinalParameters]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Pages\PageFactory.java:1:9: Name 'Database.Pages' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Pages\PageFactory.java:3:1: Utility classes should not have a public or default constructor. [HideUtilityClassConstructor]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Pages\PageFactory.java:5:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Pages\PageFactory.java:5:35: Parameter pageName should be final. [FinalParameters]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Pages\PageFactory.java:5:51: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Pages\PageFactory.java:6:9: 'switch' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Pages\PageFactory.java:6:25: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Pages\RegisterPage.java:1:9: Name 'Database.Pages' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Pages\RegisterPage.java:13:5: Class 'RegisterPage' looks like designed for extension (can be subclassed), but the method 'onPageAction' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'RegisterPage' final or making the method 'onPageAction' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Pages\RegisterPage.java:14:30: Parameter action should be final. [FinalParameters]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Pages\RegisterPage.java:14:51: Parameter db should be final. [FinalParameters]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Pages\RegisterPage.java:14:64: Parameter out should be final. [FinalParameters]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Pages\RegisterPage.java:14:76: Parameter currentAction should be final. [FinalParameters]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Pages\RegisterPage.java:15:28: ',' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Pages\RegisterPage.java:17:5: Class 'RegisterPage' looks like designed for extension (can be subclassed), but the method 'changePageAction' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'RegisterPage' final or making the method 'changePageAction' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Pages\RegisterPage.java:18:34: Parameter action should be final. [FinalParameters]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Pages\RegisterPage.java:18:49: Parameter db should be final. [FinalParameters]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Pages\RegisterPage.java:18:62: Parameter out should be final. [FinalParameters]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Pages\RegisterPage.java:19:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Pages\UAHomePage.java:1:9: Name 'Database.Pages' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Pages\UAHomePage.java:9:37: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Pages\UAHomePage.java:15:5: Class 'UAHomePage' looks like designed for extension (can be subclassed), but the method 'onPageAction' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UAHomePage' final or making the method 'onPageAction' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Pages\UAHomePage.java:16:30: Parameter action should be final. [FinalParameters]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Pages\UAHomePage.java:16:51: Parameter db should be final. [FinalParameters]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Pages\UAHomePage.java:16:64: Parameter out should be final. [FinalParameters]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Pages\UAHomePage.java:16:76: Parameter currentAction should be final. [FinalParameters]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Pages\UAHomePage.java:17:28: ',' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Pages\UAHomePage.java:20:5: Class 'UAHomePage' looks like designed for extension (can be subclassed), but the method 'changePageAction' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UAHomePage' final or making the method 'changePageAction' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Pages\UAHomePage.java:21:34: Parameter action should be final. [FinalParameters]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Pages\UAHomePage.java:21:49: Parameter db should be final. [FinalParameters]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Pages\UAHomePage.java:21:62: Parameter out should be final. [FinalParameters]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Pages\UAHomePage.java:22:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Pages\UAHomePage.java:23:9: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Pages\UAHomePage.java:23:84: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Pages\UAHomePage.java:26:9: '}' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Pages\UAHomePage.java:26:10: 'else' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Pages\UAHomePage.java:26:10: 'else' is not preceded with whitespace. [WhitespaceAround]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Database\Pages\UAHomePage.java:26:14: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\Action.java:1:9: Name 'Input' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\Action.java:94:38: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\Action.java:95:40: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\Action.java:96:42: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\Action.java:97:48: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\Action.java:98:48: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\Action.java:99:54: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\Action.java:100:44: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\Filter.java:1:9: Name 'Input' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\Filter.java:7:5: Class 'Filter' looks like designed for extension (can be subclassed), but the method 'getContains' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Filter' final or making the method 'getContains' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\Filter.java:11:5: Class 'Filter' looks like designed for extension (can be subclassed), but the method 'setContains' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Filter' final or making the method 'setContains' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\Filter.java:11:29: Parameter contains should be final. [FinalParameters]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\Filter.java:15:5: Class 'Filter' looks like designed for extension (can be subclassed), but the method 'getSort' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Filter' final or making the method 'getSort' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\Filter.java:19:5: Class 'Filter' looks like designed for extension (can be subclassed), but the method 'setSort' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Filter' final or making the method 'setSort' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\Filter.java:19:25: Parameter sort should be final. [FinalParameters]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\Filter.java:23:28: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\Filter.java:27:9: Class 'SortMovies' looks like designed for extension (can be subclassed), but the method 'getRating' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SortMovies' final or making the method 'getRating' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\Filter.java:31:9: Class 'SortMovies' looks like designed for extension (can be subclassed), but the method 'setRating' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SortMovies' final or making the method 'setRating' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\Filter.java:31:31: Parameter rating should be final. [FinalParameters]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\Filter.java:35:9: Class 'SortMovies' looks like designed for extension (can be subclassed), but the method 'getDuration' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SortMovies' final or making the method 'getDuration' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\Filter.java:39:9: Class 'SortMovies' looks like designed for extension (can be subclassed), but the method 'setDuration' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SortMovies' final or making the method 'setDuration' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\Filter.java:39:33: Parameter duration should be final. [FinalParameters]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\Filter.java:43:9: Class 'SortMovies' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SortMovies' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\Filter.java:45:34: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\Filter.java:46:48: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\Filter.java:47:54: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\Filter.java:52:5: Class 'Filter' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Filter' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\Filter.java:54:26: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\Filter.java:55:40: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\Filter.java:56:34: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\FilterOption.java:1:9: Name 'Input' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\FilterOption.java:9:5: Class 'FilterOption' looks like designed for extension (can be subclassed), but the method 'getActors' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'FilterOption' final or making the method 'getActors' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\FilterOption.java:13:5: Class 'FilterOption' looks like designed for extension (can be subclassed), but the method 'setActors' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'FilterOption' final or making the method 'setActors' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\FilterOption.java:13:27: Parameter actors should be final. [FinalParameters]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\FilterOption.java:17:5: Class 'FilterOption' looks like designed for extension (can be subclassed), but the method 'getGenre' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'FilterOption' final or making the method 'getGenre' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\FilterOption.java:21:5: Class 'FilterOption' looks like designed for extension (can be subclassed), but the method 'setGenre' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'FilterOption' final or making the method 'setGenre' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\FilterOption.java:21:26: Parameter genre should be final. [FinalParameters]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\FilterOption.java:25:5: Class 'FilterOption' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'FilterOption' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\FilterOption.java:27:32: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\FilterOption.java:28:36: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\FilterOption.java:29:36: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\InputData.java:1:9: Name 'Input' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\InputData.java:6:21: Variable 'users' must be private and have accessor methods. [VisibilityModifier]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\InputData.java:7:22: Variable 'movies' must be private and have accessor methods. [VisibilityModifier]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\InputData.java:8:23: Variable 'actions' must be private and have accessor methods. [VisibilityModifier]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\InputData.java:10:5: Class 'InputData' looks like designed for extension (can be subclassed), but the method 'getUsers' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InputData' final or making the method 'getUsers' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\InputData.java:14:5: Class 'InputData' looks like designed for extension (can be subclassed), but the method 'setUsers' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InputData' final or making the method 'setUsers' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\InputData.java:14:26: Parameter users should be final. [FinalParameters]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\InputData.java:18:5: Class 'InputData' looks like designed for extension (can be subclassed), but the method 'getMovies' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InputData' final or making the method 'getMovies' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\InputData.java:22:5: Class 'InputData' looks like designed for extension (can be subclassed), but the method 'setMovies' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InputData' final or making the method 'setMovies' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\InputData.java:22:27: Parameter movies should be final. [FinalParameters]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\InputData.java:26:5: Class 'InputData' looks like designed for extension (can be subclassed), but the method 'getActions' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InputData' final or making the method 'getActions' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\InputData.java:30:5: Class 'InputData' looks like designed for extension (can be subclassed), but the method 'setActions' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InputData' final or making the method 'setActions' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\InputData.java:30:28: Parameter actions should be final. [FinalParameters]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\InputData.java:34:5: Class 'InputData' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InputData' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\InputData.java:36:41: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\InputData.java:37:34: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\InputData.java:38:38: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\InputData.java:39:40: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\Movie.java:1:9: Name 'Input' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\Movie.java:19:18: Parameter newMovie should be final. [FinalParameters]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\Movie.java:35:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'getName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'getName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\Movie.java:39:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'setName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'setName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\Movie.java:39:25: Parameter name should be final. [FinalParameters]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\Movie.java:43:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'getYear' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'getYear' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\Movie.java:47:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'setYear' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'setYear' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\Movie.java:47:25: Parameter year should be final. [FinalParameters]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\Movie.java:51:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'getDuration' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'getDuration' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\Movie.java:55:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'setDuration' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'setDuration' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\Movie.java:55:29: Parameter duration should be final. [FinalParameters]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\Movie.java:59:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'getGenres' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'getGenres' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\Movie.java:63:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'setGenres' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'setGenres' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\Movie.java:63:27: Parameter genres should be final. [FinalParameters]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\Movie.java:67:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'getActors' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'getActors' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\Movie.java:71:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'setActors' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'setActors' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\Movie.java:71:27: Parameter actors should be final. [FinalParameters]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\Movie.java:75:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'getCountriesBanned' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'getCountriesBanned' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\Movie.java:79:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'setCountriesBanned' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'setCountriesBanned' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\Movie.java:79:36: Parameter countriesBanned should be final. [FinalParameters]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\Movie.java:83:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'printToJson' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'printToJson' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\Movie.java:83:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\Movie.java:85:29: ',' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\Movie.java:86:29: ',' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\Movie.java:87:33: ',' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\Movie.java:88:31: ',' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\Movie.java:89:31: ',' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\Movie.java:90:40: ',' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\Movie.java:91:33: ',' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\Movie.java:92:31: ',' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\Movie.java:93:35: ',' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\Movie.java:99:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'getRating' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'getRating' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\Movie.java:103:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'setRating' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'setRating' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\Movie.java:103:27: Parameter rating should be final. [FinalParameters]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\Movie.java:107:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'getNumLikes' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'getNumLikes' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\Movie.java:111:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'setNumLikes' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'setNumLikes' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\Movie.java:111:29: Parameter numLikes should be final. [FinalParameters]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\Movie.java:115:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'getNumRatings' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'getNumRatings' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\Movie.java:119:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'setNumRatings' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'setNumRatings' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\Movie.java:119:31: Parameter numRatings should be final. [FinalParameters]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\Movie.java:123:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\Movie.java:125:37: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\Movie.java:126:40: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\Movie.java:127:34: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\Movie.java:128:42: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\Movie.java:129:38: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\Movie.java:130:38: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\Movie.java:131:56: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\Movie.java:132:38: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\User.java:1:9: Name 'Input' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\User.java:15:40: '15' is a magic number. [MagicNumber]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\User.java:17:17: Parameter newUser should be final. [FinalParameters]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\User.java:32:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'getCredentials' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'getCredentials' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\User.java:36:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'setCredentials' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'setCredentials' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\User.java:36:32: Parameter credentials should be final. [FinalParameters]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\User.java:40:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'getRatedMovies' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'getRatedMovies' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\User.java:44:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'setRatedMovies' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'setRatedMovies' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\User.java:44:32: Parameter ratedMovies should be final. [FinalParameters]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\User.java:48:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'getLikedMovies' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'getLikedMovies' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\User.java:52:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'setLikedMovies' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'setLikedMovies' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\User.java:52:32: Parameter likedMovies should be final. [FinalParameters]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\User.java:56:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'getWatchedMovies' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'getWatchedMovies' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\User.java:60:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'setWatchedMovies' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'setWatchedMovies' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\User.java:60:34: Parameter watchedMovies should be final. [FinalParameters]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\User.java:64:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'outputToJson' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'outputToJson' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\User.java:64:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\User.java:66:39: ',' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\User.java:67:39: ',' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\User.java:68:71: ')' is preceded with whitespace. [ParenPad]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\User.java:69:43: ',' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\User.java:70:41: ',' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\User.java:71:39: ',' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\User.java:72:39: ',' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\User.java:78:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\User.java:80:36: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\User.java:81:46: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\userCredentials.java:1:9: Name 'Input' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\userCredentials.java:6:14: Name 'userCredentials' must match pattern '^[A-Z][a-zA-Z0-9]*$'. [TypeName]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\userCredentials.java:15:17: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\userCredentials.java:20:28: Parameter newUserCred should be final. [FinalParameters]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\userCredentials.java:32:5: Class 'userCredentials' looks like designed for extension (can be subclassed), but the method 'getName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'userCredentials' final or making the method 'getName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\userCredentials.java:36:5: Class 'userCredentials' looks like designed for extension (can be subclassed), but the method 'setName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'userCredentials' final or making the method 'setName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\userCredentials.java:36:25: Parameter name should be final. [FinalParameters]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\userCredentials.java:40:5: Class 'userCredentials' looks like designed for extension (can be subclassed), but the method 'getPassword' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'userCredentials' final or making the method 'getPassword' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\userCredentials.java:44:5: Class 'userCredentials' looks like designed for extension (can be subclassed), but the method 'setPassword' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'userCredentials' final or making the method 'setPassword' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\userCredentials.java:44:29: Parameter password should be final. [FinalParameters]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\userCredentials.java:48:5: Class 'userCredentials' looks like designed for extension (can be subclassed), but the method 'getAccountType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'userCredentials' final or making the method 'getAccountType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\userCredentials.java:52:5: Class 'userCredentials' looks like designed for extension (can be subclassed), but the method 'setAccountType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'userCredentials' final or making the method 'setAccountType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\userCredentials.java:52:32: Parameter accountType should be final. [FinalParameters]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\userCredentials.java:56:5: Class 'userCredentials' looks like designed for extension (can be subclassed), but the method 'getCountry' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'userCredentials' final or making the method 'getCountry' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\userCredentials.java:60:5: Class 'userCredentials' looks like designed for extension (can be subclassed), but the method 'setCountry' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'userCredentials' final or making the method 'setCountry' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\userCredentials.java:60:28: Parameter country should be final. [FinalParameters]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\userCredentials.java:64:5: Class 'userCredentials' looks like designed for extension (can be subclassed), but the method 'getBalance' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'userCredentials' final or making the method 'getBalance' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\userCredentials.java:68:5: Class 'userCredentials' looks like designed for extension (can be subclassed), but the method 'setBalance' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'userCredentials' final or making the method 'setBalance' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\userCredentials.java:68:28: Parameter balance should be final. [FinalParameters]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\userCredentials.java:72:5: Class 'userCredentials' looks like designed for extension (can be subclassed), but the method 'getToken' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'userCredentials' final or making the method 'getToken' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\userCredentials.java:75:5: Class 'userCredentials' looks like designed for extension (can be subclassed), but the method 'outputToJson' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'userCredentials' final or making the method 'outputToJson' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\userCredentials.java:75:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\userCredentials.java:75:37: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\userCredentials.java:77:26: ',' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\userCredentials.java:78:30: ',' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\userCredentials.java:79:33: ',' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\userCredentials.java:80:29: ',' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\userCredentials.java:81:29: ',' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\userCredentials.java:85:5: Class 'userCredentials' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'userCredentials' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\userCredentials.java:87:47: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\userCredentials.java:88:40: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\userCredentials.java:89:50: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\userCredentials.java:90:48: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\userCredentials.java:91:48: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\userCredentials.java:92:40: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Input\userCredentials.java:93:36: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Main.java:13:1: Utility classes should not have a public or default constructor. [HideUtilityClassConstructor]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Main.java:16:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Main.java:16:29: Parameter args should be final. [FinalParameters]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Main.java:22:18: Name 'PooTvDataBase' must match pattern '^[a-z][a-zA-Z0-9]*$'. [LocalVariableName]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Main.java:39: Line is longer than 100 characters (found 120). [LineLength]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Main.java:43: Line is longer than 100 characters (found 115). [LineLength]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Output\Output.java:1:9: Name 'Output' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Output\Output.java:11:32: Variable 'objectMapper' must be private and have accessor methods. [VisibilityModifier]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Output\Output.java:19:5: Class 'Output' looks like designed for extension (can be subclassed), but the method 'getOutputFile' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Output' final or making the method 'getOutputFile' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Output\Output.java:23:5: Class 'Output' looks like designed for extension (can be subclassed), but the method 'addError' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Output' final or making the method 'addError' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Output\Output.java:23:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Output\Output.java:32:5: Class 'Output' looks like designed for extension (can be subclassed), but the method 'addLoginSuccess' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Output' final or making the method 'addLoginSuccess' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Output\Output.java:32:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Output\Output.java:32:33: Parameter db should be final. [FinalParameters]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Output\Output.java:41:5: Class 'Output' looks like designed for extension (can be subclassed), but the method 'addCurrentMovies' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Output' final or making the method 'addCurrentMovies' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Output\Output.java:41:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Output\Output.java:41:34: Parameter db should be final. [FinalParameters]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Test.java:1: File does not end with a newline. [NewlineAtEndOfFile]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Test.java:9:28: Using the '.*' form of import should be avoided - java.util.concurrent.*. [AvoidStarImport]
Audit done.
Checkstyle ends with 376 errors.
