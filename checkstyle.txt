Starting audit...
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Action.java:16:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'getType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'getType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Action.java:20:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'setType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'setType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Action.java:20:25: Parameter type should be final. [FinalParameters]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Action.java:24:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'getPage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'getPage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Action.java:28:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'setPage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'setPage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Action.java:28:25: Parameter page should be final. [FinalParameters]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Action.java:32:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'getFeature' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'getFeature' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Action.java:36:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'setFeature' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'setFeature' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Action.java:36:28: Parameter feature should be final. [FinalParameters]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Action.java:40:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'getCredentials' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'getCredentials' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Action.java:44:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'setCredentials' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'setCredentials' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Action.java:44:32: Parameter credentials should be final. [FinalParameters]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Action.java:48:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'getStartsWith' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'getStartsWith' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Action.java:52:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'setStartsWith' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'setStartsWith' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Action.java:52:31: Parameter startsWith should be final. [FinalParameters]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Action.java:56:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'getMovie' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'getMovie' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Action.java:60:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'setMovie' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'setMovie' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Action.java:60:26: Parameter movie should be final. [FinalParameters]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Action.java:64:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'getCount' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'getCount' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Action.java:68:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'setCount' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'setCount' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Action.java:68:26: Parameter count should be final. [FinalParameters]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Action.java:72:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'getRate' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'getRate' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Action.java:76:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'setRate' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'setRate' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Action.java:76:25: Parameter rate should be final. [FinalParameters]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Action.java:80:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'getFilters' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'getFilters' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Action.java:84:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'setFilters' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'setFilters' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Action.java:84:28: Parameter filters should be final. [FinalParameters]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Action.java:88:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Action.java:90:26: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Action.java:91:40: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Action.java:92:42: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Action.java:93:48: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Action.java:94:48: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Action.java:95:54: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Action.java:96:44: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\checker\CheckStyleConstants.java:3:1: Utility classes should not have a public or default constructor. [HideUtilityClassConstructor]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Filter.java:5:5: Class 'Filter' looks like designed for extension (can be subclassed), but the method 'getContains' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Filter' final or making the method 'getContains' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Filter.java:9:5: Class 'Filter' looks like designed for extension (can be subclassed), but the method 'setContains' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Filter' final or making the method 'setContains' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Filter.java:9:29: Parameter contains should be final. [FinalParameters]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Filter.java:13:5: Class 'Filter' looks like designed for extension (can be subclassed), but the method 'getSort' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Filter' final or making the method 'getSort' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Filter.java:17:5: Class 'Filter' looks like designed for extension (can be subclassed), but the method 'setSort' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Filter' final or making the method 'setSort' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Filter.java:17:25: Parameter sort should be final. [FinalParameters]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Filter.java:21:28: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Filter.java:25:9: Class 'SortMovies' looks like designed for extension (can be subclassed), but the method 'getRating' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SortMovies' final or making the method 'getRating' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Filter.java:29:9: Class 'SortMovies' looks like designed for extension (can be subclassed), but the method 'setRating' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SortMovies' final or making the method 'setRating' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Filter.java:29:31: Parameter rating should be final. [FinalParameters]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Filter.java:33:9: Class 'SortMovies' looks like designed for extension (can be subclassed), but the method 'getDuration' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SortMovies' final or making the method 'getDuration' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Filter.java:37:9: Class 'SortMovies' looks like designed for extension (can be subclassed), but the method 'setDuration' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SortMovies' final or making the method 'setDuration' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Filter.java:37:33: Parameter duration should be final. [FinalParameters]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\FilterOption.java:7:5: Class 'FilterOption' looks like designed for extension (can be subclassed), but the method 'getActors' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'FilterOption' final or making the method 'getActors' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\FilterOption.java:11:5: Class 'FilterOption' looks like designed for extension (can be subclassed), but the method 'setActors' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'FilterOption' final or making the method 'setActors' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\FilterOption.java:11:27: Parameter actors should be final. [FinalParameters]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\FilterOption.java:15:5: Class 'FilterOption' looks like designed for extension (can be subclassed), but the method 'getGenre' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'FilterOption' final or making the method 'getGenre' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\FilterOption.java:19:5: Class 'FilterOption' looks like designed for extension (can be subclassed), but the method 'setGenre' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'FilterOption' final or making the method 'setGenre' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\FilterOption.java:19:26: Parameter genre should be final. [FinalParameters]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\InputData.java:4:21: Variable 'users' must be private and have accessor methods. [VisibilityModifier]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\InputData.java:5:22: Variable 'movies' must be private and have accessor methods. [VisibilityModifier]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\InputData.java:6:23: Variable 'actions' must be private and have accessor methods. [VisibilityModifier]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\InputData.java:8:5: Class 'InputData' looks like designed for extension (can be subclassed), but the method 'getUsers' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InputData' final or making the method 'getUsers' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\InputData.java:12:5: Class 'InputData' looks like designed for extension (can be subclassed), but the method 'setUsers' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InputData' final or making the method 'setUsers' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\InputData.java:12:26: Parameter users should be final. [FinalParameters]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\InputData.java:16:5: Class 'InputData' looks like designed for extension (can be subclassed), but the method 'getMovies' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InputData' final or making the method 'getMovies' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\InputData.java:20:5: Class 'InputData' looks like designed for extension (can be subclassed), but the method 'setMovies' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InputData' final or making the method 'setMovies' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\InputData.java:20:27: Parameter movies should be final. [FinalParameters]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\InputData.java:24:5: Class 'InputData' looks like designed for extension (can be subclassed), but the method 'getActions' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InputData' final or making the method 'getActions' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\InputData.java:28:5: Class 'InputData' looks like designed for extension (can be subclassed), but the method 'setActions' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InputData' final or making the method 'setActions' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\InputData.java:28:28: Parameter actions should be final. [FinalParameters]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\InputData.java:32:5: Class 'InputData' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InputData' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\InputData.java:34:29: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\InputData.java:35:34: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\InputData.java:36:38: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\InputData.java:37:40: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Main.java:8:1: Utility classes should not have a public or default constructor. [HideUtilityClassConstructor]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Main.java:11:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Main.java:11:29: Parameter args should be final. [FinalParameters]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Main.java:14: Line is longer than 100 characters (found 105). [LineLength]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Main.java:17:67: ',' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Movie.java:13:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'getName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'getName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Movie.java:17:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'setName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'setName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Movie.java:17:25: Parameter name should be final. [FinalParameters]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Movie.java:21:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'getYear' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'getYear' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Movie.java:25:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'setYear' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'setYear' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Movie.java:25:25: Parameter year should be final. [FinalParameters]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Movie.java:29:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'getDuration' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'getDuration' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Movie.java:33:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'setDuration' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'setDuration' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Movie.java:33:29: Parameter duration should be final. [FinalParameters]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Movie.java:37:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'getGenres' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'getGenres' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Movie.java:41:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'setGenres' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'setGenres' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Movie.java:41:27: Parameter genres should be final. [FinalParameters]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Movie.java:45:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'getActors' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'getActors' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Movie.java:49:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'setActors' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'setActors' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Movie.java:49:27: Parameter actors should be final. [FinalParameters]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Movie.java:53:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'getCountriesBanned' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'getCountriesBanned' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Movie.java:57:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'setCountriesBanned' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'setCountriesBanned' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Movie.java:57:36: Parameter countriesBanned should be final. [FinalParameters]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Movie.java:61:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Movie.java:63:25: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Movie.java:64:40: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Movie.java:65:34: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Movie.java:66:42: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Movie.java:67:38: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Movie.java:68:38: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Movie.java:69:56: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Movie.java:70:38: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Pages\ChangePage.java:1:9: Name 'Pages' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Pages\ChangePage.java:4:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Pages\ChangePage.java:4:59: ',' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Pages\ChangePage.java:4:76: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Pages\ChangePage.java:5:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Pages\ChangePage.java:5:9: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Pages\PageTemplate.java:1:9: Name 'Pages' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Pages\PageTemplate.java:4:12: Variable 'name' must be private and have accessor methods. [VisibilityModifier]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Pages\PageTemplate.java:7:5: Class 'PageTemplate' looks like designed for extension (can be subclassed), but the method 'getName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PageTemplate' final or making the method 'getName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Pages\PageTemplate.java:11:5: Class 'PageTemplate' looks like designed for extension (can be subclassed), but the method 'setName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PageTemplate' final or making the method 'setName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Pages\PageTemplate.java:11:25: Parameter name should be final. [FinalParameters]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Test.java:1: File does not end with a newline. [NewlineAtEndOfFile]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\Test.java:9:28: Using the '.*' form of import should be avoided - java.util.concurrent.*. [AvoidStarImport]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\User.java:11:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'getCredentials' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'getCredentials' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\User.java:15:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'setCredentials' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'setCredentials' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\User.java:15:32: Parameter credentials should be final. [FinalParameters]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\User.java:19:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'getCurrentMovies' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'getCurrentMovies' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\User.java:23:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'setCurrentMovies' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'setCurrentMovies' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\User.java:23:34: Parameter currentMovies should be final. [FinalParameters]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\User.java:27:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'getRatedMovies' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'getRatedMovies' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\User.java:31:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'setRatedMovies' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'setRatedMovies' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\User.java:31:32: Parameter ratedMovies should be final. [FinalParameters]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\User.java:35:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'getLikedMovies' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'getLikedMovies' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\User.java:39:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'setLikedMovies' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'setLikedMovies' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\User.java:39:32: Parameter likedMovies should be final. [FinalParameters]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\User.java:43:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'getWatchedMovies' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'getWatchedMovies' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\User.java:47:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'setWatchedMovies' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'setWatchedMovies' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\User.java:47:34: Parameter watchedMovies should be final. [FinalParameters]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\User.java:51:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\User.java:53:24: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\User.java:54:46: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\userCredentials.java:1:14: Name 'userCredentials' must match pattern '^[A-Z][a-zA-Z0-9]*$'. [TypeName]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\userCredentials.java:10:17: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\userCredentials.java:17:5: Class 'userCredentials' looks like designed for extension (can be subclassed), but the method 'getName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'userCredentials' final or making the method 'getName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\userCredentials.java:21:5: Class 'userCredentials' looks like designed for extension (can be subclassed), but the method 'setName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'userCredentials' final or making the method 'setName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\userCredentials.java:21:25: Parameter name should be final. [FinalParameters]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\userCredentials.java:25:5: Class 'userCredentials' looks like designed for extension (can be subclassed), but the method 'getPassword' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'userCredentials' final or making the method 'getPassword' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\userCredentials.java:29:5: Class 'userCredentials' looks like designed for extension (can be subclassed), but the method 'setPassword' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'userCredentials' final or making the method 'setPassword' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\userCredentials.java:29:29: Parameter password should be final. [FinalParameters]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\userCredentials.java:33:5: Class 'userCredentials' looks like designed for extension (can be subclassed), but the method 'getAccountType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'userCredentials' final or making the method 'getAccountType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\userCredentials.java:37:5: Class 'userCredentials' looks like designed for extension (can be subclassed), but the method 'setAccountType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'userCredentials' final or making the method 'setAccountType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\userCredentials.java:37:32: Parameter accountType should be final. [FinalParameters]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\userCredentials.java:41:5: Class 'userCredentials' looks like designed for extension (can be subclassed), but the method 'getCountry' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'userCredentials' final or making the method 'getCountry' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\userCredentials.java:45:5: Class 'userCredentials' looks like designed for extension (can be subclassed), but the method 'setCountry' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'userCredentials' final or making the method 'setCountry' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\userCredentials.java:45:28: Parameter country should be final. [FinalParameters]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\userCredentials.java:49:5: Class 'userCredentials' looks like designed for extension (can be subclassed), but the method 'getBalance' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'userCredentials' final or making the method 'getBalance' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\userCredentials.java:53:5: Class 'userCredentials' looks like designed for extension (can be subclassed), but the method 'setBalance' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'userCredentials' final or making the method 'setBalance' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\userCredentials.java:53:28: Parameter balance should be final. [FinalParameters]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\userCredentials.java:57:5: Class 'userCredentials' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'userCredentials' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\userCredentials.java:59:35: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\userCredentials.java:60:40: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\userCredentials.java:61:50: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\userCredentials.java:62:48: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\userCredentials.java:63:48: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\userCredentials.java:64:40: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\Luca\Desktop\proiect1\.\src\userCredentials.java:65:36: '+' should be on a new line. [OperatorWrap]
Audit done.
Checkstyle ends with 160 errors.
